name: Build and Releases
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            output_name: sqlift-linux-x64
          - os: macos-13
            arch: x64
            output_name: sqlift-macos-x64
          - os: macos-14
            arch: arm64
            output_name: sqlift-macos-arm64
          - os: windows-2025
            arch: x64
            target: x64
            output_name: sqlift-windows-x64
          - os: windows-2025
            arch: arm64
            target: aarch64
            output_name: sqlift-windows-arm64
            cross_compile: true

    steps:
      - uses: actions/checkout@v3

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image,llvm-toolchain'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          set-java-home: 'true'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Native Image (Standard)
        if: ${{ !matrix.cross_compile }}
        run: |
          ./gradlew nativeCompile --info "-PnativeImageArgs=--target=${{ matrix.arch }}-windows"

      - name: Build Native Image (ARM64)
        if: ${{ matrix.cross_compile }}
        shell: powershell
        run: |
          ./gradlew nativeCompile `
            --info `
            "-Parch=${{ matrix.arch }}" `
            "-PnativeImageArgs=--target=${{ matrix.target }}-windows"

      - name: List Generated Files
        run: ls -R app/build/native/nativeCompile/

      - name: Rename binaries
        shell: bash
        run: |
          cd app/build/native/nativeCompile/
          if [ "${{ runner.os }}" == "Windows" ]; then
            mv sqlift.exe ${{ matrix.output_name }}.exe
          else
            mv sqlift ${{ matrix.output_name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output_name }}
          path: app/build/native/nativeCompile/${{ matrix.output_name }}${{ runner.os == 'Windows' && '.exe' || '' }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: List Downloaded Artifacts
        run: ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/sqlift-linux-x64/sqlift-linux-x64
            artifacts/sqlift-macos-x64/sqlift-macos-x64
            artifacts/sqlift-macos-arm64/sqlift-macos-arm64
            artifacts/sqlift-windows-x64/sqlift-windows-x64.exe
            artifacts/sqlift-windows-arm64/sqlift-windows-arm64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}