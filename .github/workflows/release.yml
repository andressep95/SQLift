name: Build and Releases
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            output_name: sqlift-linux-x64
            native_opts: >-
              --static
              --gc=serial
              -march=native
              -H:+StripDebugInfo
              -H:+RemoveUnusedSymbols
              -H:+ReportExceptionStackTraces
              -H:+ReduceSecurityChecks
              -H:+RemoveRedundantBoundsChecks
              -H:+UseStringDeduplication
              -H:+OptimizeServiceLoading
              -H:MaximumHeapSize=2G
              -H:+BuildReport
              --pgo
              --initialize-at-build-time
              --trace-class-initialization=false
              --no-fallback
          - os: macos-13
            arch: x64
            output_name: sqlift-macos-x64
            native_opts: >-
              --static
              --gc=serial
              -march=native
              -H:+StripDebugInfo
              -H:+RemoveUnusedSymbols
              -H:+ReportExceptionStackTraces
              -H:+ReduceSecurityChecks
              -H:+RemoveRedundantBoundsChecks
              -H:+UseStringDeduplication
              -H:+OptimizeServiceLoading
              -H:MaximumHeapSize=2G
              -H:+BuildReport
              --pgo
              --initialize-at-build-time
              --trace-class-initialization=false
              --no-fallback
          - os: macos-14
            arch: arm64
            output_name: sqlift-macos-arm64
            native_opts: >-
              --static
              --gc=serial
              -march=native
              -H:+StripDebugInfo
              -H:+RemoveUnusedSymbols
              -H:+ReportExceptionStackTraces
              -H:+ReduceSecurityChecks
              -H:+RemoveRedundantBoundsChecks
              -H:+UseStringDeduplication
              -H:+OptimizeServiceLoading
              -H:MaximumHeapSize=2G
              -H:+BuildReport
              --pgo
              --initialize-at-build-time
              --trace-class-initialization=false
              --no-fallback
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-read-only: false

      - name: Build with Gradle
        run: ./gradlew build -Dorg.gradle.caching=true

      - name: Build Native Image
        run: |
          ./gradlew nativeCompile --info "-PnativeImageArgs=${{ matrix.native_opts }}"

      - name: Strip Debug Symbols (Non-Windows)
        run: |
          cd app/build/native/nativeCompile/
          strip sqlift

      - name: Rename binaries
        shell: bash
        run: |
          cd app/build/native/nativeCompile/
          mv sqlift ${{ matrix.output_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output_name }}
          path: app/build/native/nativeCompile/${{ matrix.output_name }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/sqlift-linux-x64/sqlift-linux-x64
            artifacts/sqlift-macos-x64/sqlift-macos-x64
            artifacts/sqlift-macos-arm64/sqlift-macos-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}