name: Build, Release, and Docker

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Native Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            output_name: sqlift-linux-x64
            native_opts: "--static --no-fallback"
          - os: macos-13
            arch: x64
            output_name: sqlift-macos-x64
            native_opts: "--no-fallback"
          - os: macos-14
            arch: arm64
            output_name: sqlift-macos-arm64
            native_opts: "--no-fallback"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure build environment
        run: |
          echo "org.gradle.caching=true" >> gradle.properties
          echo "org.gradle.parallel=true" >> gradle.properties
          echo "org.gradle.daemon=false" >> gradle.properties
          echo "org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError" >> gradle.properties

      - name: Build Native Image
        run: |
          ./gradlew clean
          ./gradlew nativeCompile --info "-PnativeImageArgs=${{ matrix.native_opts }}"

      - name: Strip Binary
        run: |
          cd app/build/native/nativeCompile/
          strip sqlift || true

      - name: Rename Binary
        run: |
          cd app/build/native/nativeCompile/
          mv sqlift ${{ matrix.output_name }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output_name }}
          path: app/build/native/nativeCompile/${{ matrix.output_name }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/sqlift-linux-x64/sqlift-linux-x64
            artifacts/sqlift-macos-x64/sqlift-macos-x64
            artifacts/sqlift-macos-arm64/sqlift-macos-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build JAR with Gradle
        run: |
          ./gradlew clean build -x test

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg JAR_FILE=app/build/libs/sqlift-cli.jar \
            --build-arg VERSION=${{ github.ref_name }} \
            -t ghcr.io/${{ github.repository_owner }}/sqlift-cli:${{ github.ref_name }} \
            -t ghcr.io/${{ github.repository_owner }}/sqlift-cli:latest \
            --push .
